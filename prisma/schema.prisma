// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite" // Using SQLite for local development
  url      = "file:./dev.db"
}


// --- Core Models ---

model Employee {
  id            String    @id @default(cuid())
  name          String
  department    String? // Optional
  // Add other fields as needed: position, admissionDate, etc.
  accidents     AccidentRecord[] // Relation to accidents involving this employee
  // Add relations to other modules if needed: trainings, ppe, asos, etc.
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}


// --- Statistics & Health ---

model AccidentRecord {
  id                  String      @id @default(cuid())
  date                DateTime
  time                String?
  employeeId          String      // Foreign key to Employee
  employeeName        String?     // Denormalized for easier access, updated via logic
  employee            Employee    @relation(fields: [employeeId], references: [id], onDelete: Cascade) // Relation to Employee
  department          String
  location            String
  type                AccidentType
  cause               AccidentCause
  causeDetails        String?
  daysOff             Int         @default(0)
  description         String
  cid10Code           String?
  catIssued           Boolean     @default(false)
  investigationStatus InvestigationStatus @default(Pendente)
  reportUrl           String?
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt
}

enum AccidentType {
  Leve
  Grave
  Fatal
  Trajeto
  Tipico
}

enum AccidentCause {
  Queda
  Choque_Eletrico
  Impacto
  Corte
  Projecao_Particulas
  Quimico
  Ergonomico
  Biologico
  Outro
}

enum InvestigationStatus {
  Pendente
  Em_Andamento
  Concluida // Note: Prisma uses underscores for enum values with spaces/special chars
}

// --- Document Management ---

model DocumentRecord {
  id            String         @id @default(cuid())
  documentType  DocumentType
  title         String
  issueDate     DateTime
  expiryDate    DateTime
  responsible   String
  status        DocumentStatus
  attachmentUrl String?
  // relatedActions Json? // Storing actions as JSON might be simpler for now
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

enum DocumentType {
  PGR
  PCMSO
  PCA
  Laudo_Ergonomico
  Laudo_Insalubridade
  Laudo_Periculosidade
  Outro
}

enum DocumentStatus {
  Valido              // Corrected: Use "Valido" instead of "VÃ¡lido"
  Vencido
  Proximo_ao_Vencimento // Corrected: Use underscores
  Em_Revisao            // Corrected: Use underscores
}

// Potentially add a separate Action model if more complex relationships are needed
// model ActionItem {
//   id          String      @id @default(cuid())
//   description String
//   responsible String
//   deadline    DateTime?
//   status      ActionStatus
//   documentId  String?     // Link to DocumentRecord
//   document    DocumentRecord? @relation(fields: [documentId], references: [id])
//   // Add links to CIPA meetings, JSA, etc. if needed
//   createdAt   DateTime    @default(now())
//   updatedAt   DateTime    @updatedAt
// }

// enum ActionStatus {
//   Pendente
//   Em_Andamento
//   Concluida
// }


// --- Future Models (Placeholders) ---
// model TrainingRecord { ... }
// model PpeRecord { ... }
// model AsoRecord { ... }
// model ChemicalRecord { ... }
// model JsaRecord { ... }
// model LawsuitRecord { ... }
// model CipaMeetingRecord { ... }
// model PreventiveAction { ... }
